{
  "name": "MultiWA_Listen",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "seconds",
              "secondsInterval": 26
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -880,
        40
      ],
      "id": "8e9c460e-b53f-4dbf-bad1-09a124e2206e",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        660,
        -260
      ],
      "id": "eaf311f9-75bf-4feb-8a39-b61716c4fb85",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "url": "=https://api.helius.xyz/v0/addresses/{{ $json.wallet }}/transactions ",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "api-key",
              "value": "={{ $json.apiKey }}"
            },
            {
              "name": "limit",
              "value": "4"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "accept",
              "value": "application/json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -220,
        40
      ],
      "id": "288c8475-1522-415f-84c1-1c94e9fc83cd",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -440,
        40
      ],
      "id": "40828a3a-012d-4cc2-8f09-23f857ff933b",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "operation": "removeItemsSeenInPreviousExecutions",
        "dedupeValue": "={{ $json.signature }}",
        "options": {}
      },
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 2,
      "position": [
        0,
        -160
      ],
      "id": "77d9d61f-d4fb-45cf-994d-63fd951f55d4",
      "name": "Remove Duplicates"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      wallet: \"gCVJbLPfJ37M2R2aNca2Y8JSYRXAfhdQFinQxDr2wro\",\n      apiKey: \"37fff714-e70e-487e-bfe5-bd8080183e4f\"\n    }\n  },\n  {\n    json: {\n      wallet: \"CWHrD8D9mpqDDE9ZYmFXMCsnJa1w5y68KogFAa36QZ8Z\",\n      apiKey: \"bed27cff-53df-4938-a748-26d275895af7\"\n    }\n  },\n  // Add more wallets as needed\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        40
      ],
      "id": "f1071b21-fec5-44e9-8b8e-f650dace8b41",
      "name": "WA_store"
    },
    {
      "parameters": {
        "jsCode": "// ✅ Get wallet from paired input item (from Loop Over Items)\nconst wallet = $item(0).$node[\"Loop Over Items\"].json.wallet;\n\n// 📦 Flatten all transaction results\nconst transactions = items.flatMap(i =>\n  Array.isArray(i.json) ? i.json : [i.json]\n);\n\nlet latestBuy = null;\nlet latestTimestamp = 0;\n\nfor (const tx of transactions) {\n  if (!Array.isArray(tx.tokenTransfers)) continue;\n\n  for (const transfer of tx.tokenTransfers) {\n    const isBuy =\n      transfer.toUserAccount === wallet &&\n      transfer.fromUserAccount !== wallet &&\n      transfer.mint;\n\n    if (isBuy && tx.timestamp > latestTimestamp) {\n      latestBuy = {\n        tokenContractAddress: transfer.mint,\n        direction: \"buy\",\n        timestampRaw: tx.timestamp,\n        signature: tx.signature\n      };\n      latestTimestamp = tx.timestamp;\n    }\n  }\n}\n\nif (!latestBuy) {\n  return [\n    {\n      json: {\n        wallet,\n        content: `⚠️ No buy trades found for wallet: ${wallet}`\n      }\n    }\n  ];\n}\n\n// Convert to WAT (UTC+1)\nconst timestampUTC = new Date(latestBuy.timestampRaw * 1000);\nconst timestampWAT = new Date(timestampUTC.getTime() + (1 * 60 * 60 * 1000));\n\nreturn [\n  {\n    json: {\n      wallet,\n      content: `📥 **New Buy Detected on ${wallet}**\n**Contract Address:** ${latestBuy.tokenContractAddress}\n**Direction:** ${latestBuy.direction.toUpperCase()}\n**Signature:** ${latestBuy.signature}\n**Time (WAT):** ${timestampWAT.toISOString()}`\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        120
      ],
      "id": "9bb4bb23-b6bd-4395-81f9-6947ced03d15",
      "name": "Extract"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const content = item.content || item.json?.content;\n\n  const tokenMatch = content.match(/Detected on (.+?)\\*\\*/);\n  const contractMatch = content.match(/\\*\\*Contract Address:\\*\\* (.+)/);\n  const directionMatch = content.match(/\\*\\*Direction:\\*\\* (.+)/);\n  const signatureMatch = content.match(/\\*\\*Signature:\\*\\* (.+)/);\n  const timeMatch = content.match(/\\*\\*Time \\(WAT\\):\\*\\* (.+)/);\n\n  return {\n    json: {\n      token: tokenMatch ? tokenMatch[1].trim() : null,\n      contract: contractMatch ? contractMatch[1].trim() : null,\n      direction: directionMatch ? directionMatch[1].trim() : null,\n      signature: signatureMatch ? signatureMatch[1].trim() : null,\n      time: timeMatch ? timeMatch[1].trim() : null\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -220,
        -160
      ],
      "id": "2279affa-d9ea-42b7-9787-3558c29be46d",
      "name": "Transform"
    },
    {
      "parameters": {
        "jsCode": "let merged = [];\n\nfor (const item of items) {\n  const { token, contract, direction, time } = item.json;\n\n  const content = `📥 **New ${direction} Detected on ${token}**\\n` +\n                  `**Contract Address:** ${contract}\\n` +\n                  `**Direction:** ${direction}\\n` +\n                  `**Time (WAT):** ${time}`;\n\n  merged.push({ json: { content } });\n}\n\nreturn merged;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        -160
      ],
      "id": "0556c0bd-761b-4ce8-b163-5ccddaecd577",
      "name": "Load"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "6d317429-b723-4e6a-9557-7d65a62f5e91",
              "leftValue": "={{ $json.content }}",
              "rightValue": "No buy trades found for the wallet",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "da64ed72-3e2b-4c08-893c-b347ebffe2a8",
              "leftValue": "={{ $json.content }}",
              "rightValue": "So11111111111111111111111111111111111111112",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            },
            {
              "id": "f868cd34-4a71-4bbc-8457-773cc0e059ed",
              "leftValue": "={{ $json.content }}",
              "rightValue": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "f1e859fd-01d9-4110-a31c-7bca466084e5",
              "leftValue": "={{ $json.content }}",
              "rightValue": "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        -160
      ],
      "id": "ef308b14-e670-4198-8d2f-647b381256c1",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1346284477692907570",
          "mode": "list",
          "cachedResultName": "XAgent",
          "cachedResultUrl": "https://discord.com/channels/1346284477692907570"
        },
        "channelId": {
          "__rl": true,
          "value": "1360696019465146494",
          "mode": "list",
          "cachedResultName": "n8n_listen",
          "cachedResultUrl": "https://discord.com/channels/1346284477692907570/1360696019465146494"
        },
        "content": "={{ $json.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        660,
        -60
      ],
      "id": "b11757e4-9070-4311-aa2a-efb4a1bb9faa",
      "name": "Discord",
      "webhookId": "e0e2178c-a7d4-4f9e-a243-9870997c0e67",
      "credentials": {
        "discordBotApi": {
          "id": "NKKMgALxrR178Vvm",
          "name": "Xai"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "WA_store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Extract",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Transform",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove Duplicates": {
      "main": [
        [
          {
            "node": "Load",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WA_store": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform": {
      "main": [
        [
          {
            "node": "Remove Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Load": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7b1b0b9a-4f9f-4d51-8168-dfa73c97a5b2",
  "meta": {
    "instanceId": "bd3fb2445c8d5240ef1fe92cf193d7e05c0fe42313f2bfa7af5644dbeaa225be"
  },
  "id": "Ys4VSOFvke9SRksw",
  "tags": []
}